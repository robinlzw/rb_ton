## 基本说明

这个归档文件包含了 TON 区块链 Lite 客户端的初步版本及相关的 TON 区块链库的部分文件。这不一定代表了目前为止开发的全部 TON 区块链代码；相反，它是一个简化的稳定版本，仅包含编译 Lite 客户端所必需的文件，有时包含了这些文件的过时版本，只要足够用于此目的即可。

## 基本编译和安装说明

1. 下载最新版本的 TON 区块链源代码，链接在 GitHub 仓库：https://github.com/ton-blockchain/ton/：

   ```bash
   git clone https://github.com/ton-blockchain/ton.git
   git submodule update
   ```

   TON 区块链测试网络经常更新，因此我们不能保证旧版本的 Lite 客户端始终有效。在这个开发阶段，不强制执行向后兼容性。

2. 安装最新版本的 `make`、`cmake`（版本 3.0.2 或更高）、OpenSSL（包括 C 头文件）、以及 g++ 或 clang（或其他适合您操作系统的 C++14 兼容编译器）。如果您打算运行全节点或验证节点，我们强烈推荐安装 OpenSSL 1.1.1 或更高版本，以获得更好的性能。

3. 假设您已经将源代码树下载到目录 `~/ton` 中，并且您已经创建了一个空的目录 `~/liteclient-build`。然后在 Linux 系统上的终端中运行以下命令：

   ```bash
   cd ~/liteclient-build
   cmake ~/ton
   cmake --build . --target lite-client
   ```

   您还可以编译一些对智能合约开发有用的额外工具：

   ```bash
   cmake --build . --target fift
   cmake --build . --target func
   ```

4. 从 https://ton.org/global-config.json 下载最新的配置文件：

   ```bash
   wget https://ton.org/global-config.json
   ```

5. 运行 Lite 客户端：

   ```bash
   ./lite-client/lite-client -C global-config.json
   ```

   如果一切安装成功，Lite 客户端将连接到一个特殊的服务器（TON 区块链测试网络 #1 的全节点）并向服务器发送一些查询。如果您向客户端指定一个可写的“数据库”目录作为额外参数，它将下载并保存与最新主链区块对应的区块和状态：

   ```bash
   ./lite-client/lite-client -C global-config.json -D ~/ton-db-dir
   ```

   通过在 Lite 客户端中输入“help”可以获取基本帮助信息。通过输入“quit”或按 Ctrl-C 退出。

6. 现在您可以创建新的智能合约，检查现有智能合约的状态，向智能合约发送外部消息等。您还可以使用 Fift（如果您已经编译了它）在本地编译、执行和调试智能合约。

   更多有关这些活动的详细信息，包括创建一个简单钱包智能合约的逐步说明（包括其源代码），可以在此归档中包含的 HOWTO 文件中找到。

7. 关于 TON 区块链和 TON 虚拟机的一些文档可以在下载页面 https://ton.org/docs/ 找到。请注意，这些文档可能与当前测试网络所使用的版本不完全同步，因为在最终开发和测试阶段可能会对一些实现细节进行更改。

